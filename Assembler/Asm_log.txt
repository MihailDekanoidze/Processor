Function assembler_error lines_to_bytecode(command_string_processing*) begin
line = NOPE 10
arg  = 10
arg format = 256
arg val = 10
arg error = 0
new size = 58
line = PUSH 12
arg  = 12
arg format = 256
arg val = 12
arg error = 0
command = 385
arg = 12
line = PUSH AX
arg  = AX
arg format = 512
arg val = 1
arg error = 0
command = 641
arg = 1
line = PUSH [34]
arg  = [34]
arg format = 1024
arg val = 34
arg error = 0
command = 1153
arg = 34
line = ADD
command = 2
line = SUB
command = 3
line = MUL
command = 4
line = DIV
command = 5
line = OUT
command = 6
line = HLT
command = 7
line = IN
command = 8
line = POP AX
arg  = AX
arg format = 512
arg val = 1
arg error = 0
command = 649
arg = 1
line = POP [96]
arg  = [96]
arg format = 1024
arg val = 96
arg error = 0
command = 1161
arg = 96
line = CALL 46
arg  = 46
arg format = 256
arg val = 46
arg error = 0
command = 394
arg = 46
line = JMP 12
arg  = 12
arg format = 256
arg val = 12
arg error = 0
command = 397
arg = 12
line = JA 48
arg  = 48
arg format = 256
arg val = 48
arg error = 0
command = 398
arg = 48
line = JNA 63
arg  = 63
arg format = 256
arg val = 63
arg error = 0
command = 399
arg = 63
line = JB 96
arg  = 96
arg format = 256
arg val = 96
arg error = 0
command = 400
arg = 96
line = JNB 100
arg  = 100
arg format = 256
arg val = 100
arg error = 0
command = 401
arg = 100
line = JE 136
arg  = 136
arg format = 256
arg val = 136
arg error = 0
command = 402
arg = 136
line = JNE 69
arg  = 69
arg format = 256
arg val = 69
arg error = 0
command = 403
arg = 69
line = RET
command = 20
line = PUTC
command = 23
line = 
Function assembler_error lines_to_bytecode(command_string_processing*) end
