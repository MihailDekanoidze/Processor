ASM_COMMAND("PUSH",     ((1 << 7) + (1 << 8)  + 1), 4, "PUSH")
ASM_COMMAND("ADD",      2, 3,                          "ADD")   
ASM_COMMAND("SUB",      3, 3,                          "SUB")
ASM_COMMAND("MUL",      4, 3,                          "MUL")
ASM_COMMAND("DIV",      5, 3,                          "DIV")
ASM_COMMAND("OUT",      6, 3,                          "OUT")
ASM_COMMAND("HLT",      7, 3,                          "HLT")
ASM_COMMAND("IN",       8, 2,                          "IN")
ASM_COMMAND("POP",      ((1 << 7) + 9), 3,             "IN")
ASM_COMMAND("CALL",     ((1 << 7) + (1 << 8)  +10), 4, "CALL")
ASM_COMMAND("REG_PUSH", ((1 << 7) + (1 << 9)  + 1), 4, "PUSH")    
ASM_COMMAND("RAM_PUSH", ((1 << 7) + (1 << 10) + 1), 4, "PUSH")
ASM_COMMAND("JMP",      ((1 << 7) + (1 << 8)  +13), 3, "JMP")
ASM_COMMAND("JA",       ((1 << 7) + (1 << 8)  +14), 2, "JA")
ASM_COMMAND("JNA",      ((1 << 7) + (1 << 8)  +15), 3, "JNA")
ASM_COMMAND("JB",       ((1 << 7) + (1 << 8)  +16), 2, "JB")
ASM_COMMAND("JNB",      ((1 << 7) + (1 << 8)  +17), 3, "JNB")
ASM_COMMAND("JE",       ((1 << 7) + (1 << 8)  +18), 2, "JE")
ASM_COMMAND("JNE",      ((1 << 7) + (1 << 8)  +19), 3, "JNE")
ASM_COMMAND("RET",      20, 3,                         "RET")
ASM_COMMAND("REG_POP",  ((1 << 7) + (1 << 9)  + 9), 3, "POP")
ASM_COMMAND("RAM_POP",  ((1 << 7) + (1 << 10) + 9), 3, "POP")
ASM_COMMAND("PUTC",     23, 4,                         "PUTC")
