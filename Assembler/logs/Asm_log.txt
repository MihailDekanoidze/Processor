Function assembler_error lines_to_bytecode(command_string_processing*) begin
line = ; Scanning coef A
line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = PUSH 10
arg  = 10
arg format = 2304
arg val = 1000
arg error = 0
command = 2433
arg = 1000
command_len = 4

line = PUSH 65
arg  = 65
arg format = 2304
arg val = 6500
arg error = 0
command = 2433
arg = 6500
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 102
arg  = 102
arg format = 2304
arg val = 10200
arg error = 0
command = 2433
arg = 10200
command_len = 4

line = PUSH 101
arg  = 101
arg format = 2304
arg val = 10100
arg error = 0
command = 2433
arg = 10100
command_len = 4

line = PUSH 111
arg  = 111
arg format = 2304
arg val = 11100
arg error = 0
command = 2433
arg = 11100
command_len = 4

line = PUSH 99
arg  = 99
arg format = 2304
arg val = 9900
arg error = 0
command = 2433
arg = 9900
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 114
arg  = 114
arg format = 2304
arg val = 11400
arg error = 0
command = 2433
arg = 11400
command_len = 4

line = PUSH 101
arg  = 101
arg format = 2304
arg val = 10100
arg error = 0
command = 2433
arg = 10100
command_len = 4

line = PUSH 116
arg  = 116
arg format = 2304
arg val = 11600
arg error = 0
command = 2433
arg = 11600
command_len = 4

line = PUSH 110
arg  = 110
arg format = 2304
arg val = 11000
arg error = 0
command = 2433
arg = 11000
command_len = 4

line = PUSH 69
arg  = 69
arg format = 2304
arg val = 6900
arg error = 0
command = 2433
arg = 6900
command_len = 4

line = PUTS
command = 23

line = 
line = IN
command = 8

line = POP AX
arg  = AX
arg format = 512
arg val = 1
arg error = 0
command = 649
arg = 1
command_len = 3

line = 
line = ; Scanning coef B
line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = PUSH 10
arg  = 10
arg format = 2304
arg val = 1000
arg error = 0
command = 2433
arg = 1000
command_len = 4

line = PUSH 66
arg  = 66
arg format = 2304
arg val = 6600
arg error = 0
command = 2433
arg = 6600
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 102
arg  = 102
arg format = 2304
arg val = 10200
arg error = 0
command = 2433
arg = 10200
command_len = 4

line = PUSH 101
arg  = 101
arg format = 2304
arg val = 10100
arg error = 0
command = 2433
arg = 10100
command_len = 4

line = PUSH 111
arg  = 111
arg format = 2304
arg val = 11100
arg error = 0
command = 2433
arg = 11100
command_len = 4

line = PUSH 99
arg  = 99
arg format = 2304
arg val = 9900
arg error = 0
command = 2433
arg = 9900
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 114
arg  = 114
arg format = 2304
arg val = 11400
arg error = 0
command = 2433
arg = 11400
command_len = 4

line = PUSH 101
arg  = 101
arg format = 2304
arg val = 10100
arg error = 0
command = 2433
arg = 10100
command_len = 4

line = PUSH 116
arg  = 116
arg format = 2304
arg val = 11600
arg error = 0
command = 2433
arg = 11600
command_len = 4

line = PUSH 110
arg  = 110
arg format = 2304
arg val = 11000
arg error = 0
command = 2433
arg = 11000
command_len = 4

line = PUSH 69
arg  = 69
arg format = 2304
arg val = 6900
arg error = 0
command = 2433
arg = 6900
command_len = 4

line = PUTS
command = 23

line = 
line = IN
command = 8

line = POP BX
arg  = BX
arg format = 512
arg val = 2
arg error = 0
command = 649
arg = 2
command_len = 3

line = 
line = ; Scanning coef C
line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = PUSH 10
arg  = 10
arg format = 2304
arg val = 1000
arg error = 0
command = 2433
arg = 1000
command_len = 4

line = PUSH 67
arg  = 67
arg format = 2304
arg val = 6700
arg error = 0
command = 2433
arg = 6700
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 102
arg  = 102
arg format = 2304
arg val = 10200
arg error = 0
command = 2433
arg = 10200
command_len = 4

line = PUSH 101
arg  = 101
arg format = 2304
arg val = 10100
arg error = 0
command = 2433
arg = 10100
command_len = 4

line = PUSH 111
arg  = 111
arg format = 2304
arg val = 11100
arg error = 0
command = 2433
arg = 11100
command_len = 4

line = PUSH 99
arg  = 99
arg format = 2304
arg val = 9900
arg error = 0
command = 2433
arg = 9900
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 114
arg  = 114
arg format = 2304
arg val = 11400
arg error = 0
command = 2433
arg = 11400
command_len = 4

line = PUSH 101
arg  = 101
arg format = 2304
arg val = 10100
arg error = 0
command = 2433
arg = 10100
command_len = 4

line = PUSH 116
arg  = 116
arg format = 2304
arg val = 11600
arg error = 0
command = 2433
arg = 11600
command_len = 4

line = PUSH 110
arg  = 110
arg format = 2304
arg val = 11000
arg error = 0
command = 2433
arg = 11000
command_len = 4

line = PUSH 69
arg  = 69
arg format = 2304
arg val = 6900
arg error = 0
command = 2433
arg = 6900
command_len = 4

line = PUTS
command = 23

line = 
line = IN
command = 8

line = POP CX
arg  = CX
arg format = 512
arg val = 3
arg error = 0
command = 649
arg = 3
command_len = 3

line = 
line = PUSH AX ;COMPARE A WITH ZERO
arg  = AX ;COMPARE A WITH ZERO
arg format = 512
arg val = 1
arg error = 0
command = 641
arg = 1
command_len = 4

line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = JE 300  ;LINEAR EQUATION
arg  = 300  ;LINEAR EQUATION
arg format = 2304
arg val = 30000
arg error = 0
command = 2450
arg = 30000
command_len = 2

line = PUSH BX ;DISCRIMINANTE CALCULATION
arg  = BX ;DISCRIMINANTE CALCULATION
arg format = 512
arg val = 2
arg error = 0
command = 641
arg = 2
command_len = 4

line = PUSH BX
arg  = BX
arg format = 512
arg val = 2
arg error = 0
command = 641
arg = 2
command_len = 4

line = MUL
command = 4

line = PUSH AX
arg  = AX
arg format = 512
arg val = 1
arg error = 0
command = 641
arg = 1
command_len = 4

line = PUSH CX
arg  = CX
arg format = 512
arg val = 3
arg error = 0
command = 641
arg = 3
command_len = 4

line = PUSH 4
arg  = 4
arg format = 2304
arg val = 400
arg error = 0
command = 2433
arg = 400
command_len = 4

line = MUL
command = 4

line = MUL
command = 4

line = SUB
command = 3

line = POP DX
arg  = DX
arg format = 512
arg val = 4
arg error = 0
command = 649
arg = 4
command_len = 3

line = PUSH DX
arg  = DX
arg format = 512
arg val = 4
arg error = 0
command = 641
arg = 4
command_len = 4

line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = JBS 420 ;NO ROOTS
arg  = 420 ;NO ROOTS
arg format = 2304
arg val = 42000
arg error = 0
command = 2448
arg = 42000
command_len = 3

line = PUSH DX
arg  = DX
arg format = 512
arg val = 4
arg error = 0
command = 641
arg = 4
command_len = 4

line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = JE 475    ;D = 0
arg  = 475    ;D = 0
arg format = 2304
arg val = 47500
arg error = 0
command = 2450
arg = 47500
command_len = 2

line = PUSH DX
arg  = DX
arg format = 512
arg val = 4
arg error = 0
command = 641
arg = 4
command_len = 4

line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = JBS 420
arg  = 420
arg format = 2304
arg val = 42000
arg error = 0
command = 2448
arg = 42000
command_len = 3

line = PUSH DX
arg  = DX
arg format = 512
arg val = 4
arg error = 0
command = 641
arg = 4
command_len = 4

line = SQRT
command = 24

line = PUSH BX
arg  = BX
arg format = 512
arg val = 2
arg error = 0
command = 641
arg = 2
command_len = 4

line = SUB
command = 3

line = PUSH 2
arg  = 2
arg format = 2304
arg val = 200
arg error = 0
command = 2433
arg = 200
command_len = 4

line = PUSH AX
arg  = AX
arg format = 512
arg val = 1
arg error = 0
command = 641
arg = 1
command_len = 4

line = MUL
command = 4

line = DIV
command = 5

line = PUSH DX
arg  = DX
arg format = 512
arg val = 4
arg error = 0
command = 641
arg = 4
command_len = 4

line = SQRT
command = 24

line = PUSH -1
arg  = -1
arg format = 2304
arg val = -100
arg error = 0
command = 2433
arg = -100
command_len = 4

line = MUL
command = 4

line = PUSH BX
arg  = BX
arg format = 512
arg val = 2
arg error = 0
command = 641
arg = 2
command_len = 4

line = SUB
command = 3

line = PUSH 2
arg  = 2
arg format = 2304
arg val = 200
arg error = 0
command = 2433
arg = 200
command_len = 4

line = PUSH AX
arg  = AX
arg format = 512
arg val = 1
arg error = 0
command = 641
arg = 1
command_len = 4

line = MUL
command = 4

line = DIV
command = 5

line = CALL 250
arg  = 250
arg format = 2304
arg val = 25000
arg error = 0
command = 2442
arg = 25000
command_len = 4

line = CALL 250
arg  = 250
arg format = 2304
arg val = 25000
arg error = 0
command = 2442
arg = 25000
command_len = 4

line = HLT
command = 7

line = 
line = NOPE 200 ;COMPARE B WITH ZERO
arg  = 200 ;COMPARE B WITH ZERO
arg format = 2304
arg val = 20000
arg error = 0
new size = 556
line = PUSH BX
arg  = BX
arg format = 512
arg val = 2
arg error = 0
command = 641
arg = 2
command_len = 4

line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = JE  280  ;UNCERTAINTY 
arg  = 280  ;UNCERTAINTY 
arg format = 2304
arg val = 28000
arg error = 0
command = 2450
arg = 28000
command_len = 2

line = PUSH CX
arg  = CX
arg format = 512
arg val = 3
arg error = 0
command = 641
arg = 3
command_len = 4

line = PUSH BX
arg  = BX
arg format = 512
arg val = 2
arg error = 0
command = 641
arg = 2
command_len = 4

line = DIV
command = 5

line = CALL 250
arg  = 250
arg format = 2304
arg val = 25000
arg error = 0
command = 2442
arg = 25000
command_len = 4

line = HLT
command = 7

line = 
line = 
line = ;ONE ROOT PRINTING
line = NOPE 250
arg  = 250
arg format = 2304
arg val = 25000
arg error = 0
new size = 806
line = 
line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = CALL 450 ;ROOT
arg  = 450 ;ROOT
arg format = 2304
arg val = 45000
arg error = 0
command = 2442
arg = 45000
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 101
arg  = 101
arg format = 2304
arg val = 10100
arg error = 0
command = 2433
arg = 10100
command_len = 4

line = PUSH 110
arg  = 110
arg format = 2304
arg val = 11000
arg error = 0
command = 2433
arg = 11000
command_len = 4

line = PUSH 79
arg  = 79
arg format = 2304
arg val = 7900
arg error = 0
command = 2433
arg = 7900
command_len = 4

line = PUTS
command = 23

line = 
line = OUT
command = 6

line = RET
command = 20

line = 
line = NOPE 280 ;COMPARE C WITH ZERO
arg  = 280 ;COMPARE C WITH ZERO
arg format = 2304
arg val = 28000
arg error = 0
new size = 1086
line = PUSH CX
arg  = CX
arg format = 512
arg val = 3
arg error = 0
command = 641
arg = 3
command_len = 4

line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = JE 375   ;INF ROOTS
arg  = 375   ;INF ROOTS
arg format = 2304
arg val = 37500
arg error = 0
command = 2450
arg = 37500
command_len = 2

line = CALL 420 ;NO ROOTS
arg  = 420 ;NO ROOTS
arg format = 2304
arg val = 42000
arg error = 0
command = 2442
arg = 42000
command_len = 4

line = HLT 
command = 7

line = 
line = 
line = ;INFINITY ROOTS PRINTING
line = NOPE 375    
arg  = 375    
arg format = 2304
arg val = 37500
arg error = 0
new size = 1461
line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = PUSH 10
arg  = 10
arg format = 2304
arg val = 1000
arg error = 0
command = 2433
arg = 1000
command_len = 4

line = PUSH 115
arg  = 115
arg format = 2304
arg val = 11500
arg error = 0
command = 2433
arg = 11500
command_len = 4

line = CALL 450 ;ROOT
arg  = 450 ;ROOT
arg format = 2304
arg val = 45000
arg error = 0
command = 2442
arg = 45000
command_len = 4

line = PUSH 32
arg  = 32
arg format = 2304
arg val = 3200
arg error = 0
command = 2433
arg = 3200
command_len = 4

line = PUSH 102
arg  = 102
arg format = 2304
arg val = 10200
arg error = 0
command = 2433
arg = 10200
command_len = 4

line = PUSH 110
arg  = 110
arg format = 2304
arg val = 11000
arg error = 0
command = 2433
arg = 11000
command_len = 4

line = PUSH 73
arg  = 73
arg format = 2304
arg val = 7300
arg error = 0
command = 2433
arg = 7300
command_len = 4

line = PUTS
command = 23

line = RET
command = 20

line = 
line = ;NO ROOTS PRINTING
line = NOPE 420
arg  = 420
arg format = 2304
arg val = 42000
arg error = 0
new size = 1881
line = PUSH 0
arg  = 0
arg format = 2304
arg val = 0
arg error = 0
command = 2433
arg = 0
command_len = 4

line = PUSH 10
arg  = 10
arg format = 2304
arg val = 1000
arg error = 0
command = 2433
arg = 1000
command_len = 4

line = PUSH 115
arg  = 115
arg format = 2304
arg val = 11500
arg error = 0
command = 2433
arg = 11500
command_len = 4

line = CALL 450; ROOT
arg  = 450; ROOT
arg format = 2304
arg val = 45000
arg error = 0
command = 2442
arg = 45000
command_len = 4

line = PUSH 111
arg  = 111
arg format = 2304
arg val = 11100
arg error = 0
command = 2433
arg = 11100
command_len = 4

line = PUSH 78
arg  = 78
arg format = 2304
arg val = 7800
arg error = 0
command = 2433
arg = 7800
command_len = 4

line = PUTS
command = 23

line = HLT
command = 7

line = 
line = ;WORD ROOT PRINTING
line = NOPE 450
arg  = 450
arg format = 2304
arg val = 45000
arg error = 0
new size = 2331
line = PUSH 116
arg  = 116
arg format = 2304
arg val = 11600
arg error = 0
command = 2433
arg = 11600
command_len = 4

line = PUSH 111
arg  = 111
arg format = 2304
arg val = 11100
arg error = 0
command = 2433
arg = 11100
command_len = 4

line = PUSH 111
arg  = 111
arg format = 2304
arg val = 11100
arg error = 0
command = 2433
arg = 11100
command_len = 4

line = PUSH 114
arg  = 114
arg format = 2304
arg val = 11400
arg error = 0
command = 2433
arg = 11400
command_len = 4

line = RET
command = 20

line = 
line = NOPE 475    ; D = 0
arg  = 475    ; D = 0
arg format = 2304
arg val = 47500
arg error = 0
new size = 2806
line = PUSH BX
arg  = BX
arg format = 512
arg val = 2
arg error = 0
command = 641
arg = 2
command_len = 4

line = PUSH -1
arg  = -1
arg format = 2304
arg val = -100
arg error = 0
command = 2433
arg = -100
command_len = 4

line = MUL
command = 4

line = PUSH AX
arg  = AX
arg format = 512
arg val = 1
arg error = 0
command = 641
arg = 1
command_len = 4

line = PUSH 2
arg  = 2
arg format = 2304
arg val = 200
arg error = 0
command = 2433
arg = 200
command_len = 4

line = MUL
command = 4

line = DIV
command = 5

line = 
Function assembler_error lines_to_bytecode(command_string_processing*) end
